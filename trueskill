#!/usr/bin/env python3

import trueskill, fileinput, json
from collections import defaultdict

data = json.loads(u"".join([x for x in fileinput.input()]))

from trueskill import Rating
horse_rating = defaultdict(lambda: Rating())
driver_rating = defaultdict(lambda: Rating())

def rate(race):
    rating = {
        'horse':  [horse_rating[x] for x in race['horseId']],
        'driver': [driver_rating[x] for x in race['driverId']]
    }
    rank = race['finishOrder']

    # Can't handle None ranks. This can fail if no ranks
    # are available
    try:
        max_rank = max(filter(lambda x: x != None, rank))
        rank = [x if x != None else max_rank + 1 for x in rank]
    except:
        return None
        
    # Get the previous skill ratings and inject into race
    race['horseMu'] = [x.mu for x in rating['horse']]
    race['horseSigma'] = [x.sigma for x in rating['horse']]
    race['driverMu'] = [x.mu for x in rating['driver']]
    race['driverSigma'] = [x.sigma for x in rating['driver']]

    # Then update the ratings before the next race
    rating = trueskill.rate(list(zip(rating['horse'],rating['driver'])), rank)
    for row in zip(race['horseId'], race['driverId'], rating):
        horse_rating[row[0]] = row[2][0]
        driver_rating[row[1]] = row[2][1]
        
    return race


# Data is assumed to be sorted in chronological order
result = [rate(race) for race in data]
print(json.dumps([x for x in filter(lambda x: x != None, result)]))


